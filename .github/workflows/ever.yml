# This is a basic workflow to help you get started with Actions

name: ever

# Controls when the workflow will run
on:


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: getit
        uses: actions/github-script@v6
        with:
          retries: 3
          script: |
            let workflow_runs = await github.rest.actions.listWorkflowRuns({
                owner: context.repo.owner,
                repo: context.repo.repo,
                branch: process.env.GITHUB_REF_NAME,
                workflow_id: "ci.yml",
                status: "success",
                head_sha: process.env.GITHUB_SHA,
                per_page: "1",
              });
              
            console.log(JSON.stringify(workflow_runs));
            if (workflow_runs && workflow_runs.data.total_count !== 0) {
                let version;
                let sem_regexp = new RegExp(`^v[0-9]+\.[0-9]+\.[0-9]+.*$`);
                let workflow_id = workflow_runs.data.workflow_runs[0].id;
                let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({owner: context.repo.owner, repo: context.repo.repo, run_id: workflow_id,});
                let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
                    version = sem_regexp.exec(artifact.name)
                    return version})[0];
                let download = await github.rest.actions.downloadArtifact({owner: context.repo.owner, repo: context.repo.repo, artifact_id: matchArtifact.id, archive_format: 'zip',});
                let fs = require('fs');
                fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/${version}.zip`, Buffer.from(download.data));
                await exec.exec('unzip', ['-f', `${process.env.GITHUB_WORKSPACE}/${version}.zip`]);
                core.setOutput("releaseVersion", version);
            } else{ 
                core.setFailed("No successful ci jobs were found for this branch last commit")
            }
